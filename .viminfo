# This viminfo file was generated by Vim 9.1.
# You may edit it if you're careful!

# Viminfo version
|1,4

# Value of 'encoding' when this file was written
*encoding=utf-8


# hlsearch on (H) or off (h):
~H
# Command Line History (newest to oldest):
:wq
|2,0,1758005859,,"wq"
:%d
|2,0,1757999870,,"%d"
:q!
|2,0,1757990588,,"q!"
:w
|2,0,1757988844,,"w"
:!
|2,0,1757988816,,"!"
:wq!
|2,0,1757988686,,"wq!"

# Search String History (newest to oldest):

# Expression History (newest to oldest):

# Input Line History (newest to oldest):

# Debug Line History (newest to oldest):

# Registers:
""1	LINE	0
	from scapy.all import sniff, IP
	
	# Callback function to process each packet
	def packet_callback(packet):
	    if packet.haslayer(IP):
	        ip_layer = packet[IP]
	        print(f"[+] Packet: {ip_layer.src} → {ip_layer.dst} | Protocol: {ip_layer.proto}")
	
	# Start sniffing (you may need sudo privileges)
	print("Starting packet capture... Press Ctrl+C to stop.")
	#sniff(prn=packet_callback, store=False)
	sniff(filter="tcp", prn=packet_callback, store=False)
	
	
|3,1,1,1,14,0,1757999870,"from scapy.all import sniff, IP","","# Callback function to process each packet","def packet_callback(packet):","    if packet.haslayer(IP):","        ip_layer = packet[IP]","        print(f\"[+] Packet: {ip_layer.src} → {ip_layer.dst} | Protocol: {ip_layer.proto}\")","","# Start sniffing (you may need sudo privileges)","print(\"Starting packet capture... Press Ctrl+C to stop.\")","#sniff(prn=packet_callback, store=False)",>57
|<"sniff(filter=\"tcp\", prn=packet_callback, store=False)","",""
"2	LINE	0
	import pyshark
	
	def read_pcap(pcap_path):
	    cap = pyshark.FileCapture(pcap_path)
	    for i, packet in enumerate(cap):
	        print(f"Packet #{i}:")
	        print(packet)
	        # Accessing layers & fields
	        if 'IP' in packet:
	            print("  Src IP:", packet.ip.src)
	            print("  Dst IP:", packet.ip.dst)
	        if 'TCP' in packet:
	            print("  Src Port:", packet.tcp.srcport)
	            print("  Dst Port:", packet.tcp.dstport)
	        # Limit number of packets for demo
	        if i >= 10:
	            break
	
	    cap.close()
	
	if __name__ == "__main__":
	    read_pcap('example.pcap')
	
|3,0,2,1,23,0,1757986252,"import pyshark","","def read_pcap(pcap_path):","    cap = pyshark.FileCapture(pcap_path)","    for i, packet in enumerate(cap):","        print(f\"Packet #{i}:\")","        print(packet)","        # Accessing layers & fields","        if 'IP' in packet:","            print(\"  Src IP:\", packet.ip.src)","            print(\"  Dst IP:\", packet.ip.dst)","        if 'TCP' in packet:",>56
|<"            print(\"  Src Port:\", packet.tcp.srcport)","            print(\"  Dst Port:\", packet.tcp.dstport)","        # Limit number of packets for demo","        if i >= 10:","            break","","    cap.close()","","if __name__ == \"__main__\":","    read_pcap('example.pcap')",""
"3	LINE	0
	import socket
	import struct
	import textwrap
	
	# formatting helpers
	def mac_addr(bytes_addr):
	    return ':'.join('%02x' % b for b in bytes_addr)
	
	def ipv4(addr_bytes):
	    return '.'.join(str(b) for b in addr_bytes)
	
	def parse_ethernet_header(packet):
	    # Ethernet header is 14 bytes: dest_mac(6) src_mac(6) protocol(2)
	    eth_header = packet[:14]
	    dest_mac, src_mac, proto = struct.unpack('!6s6sH', eth_header)
	    return {
	        'dest_mac': mac_addr(dest_mac),
	        'src_mac': mac_addr(src_mac),
	        'proto': proto,
	        'data': packet[14:]
	    }
	
	def parse_ipv4_header(data):
	    # Minimum IPv4 header is 20 bytes
	    # unpack: version + IHL, DSCP/ECN, total length, identification, flags+fragment offset,
	    # TTL, protocol, header checksum, source IP, dest IP
	    version_ihl, tos, total_length, identification, flags_frag, ttl, protocol, checksum, src, dest = struct.unpack('!BBHHHBBH4s4s', data[:20])
	    version = version_ihl >> 4
	    ihl = version_ihl & 0x0F
	    src_ip = ipv4(src)
	    dest_ip = ipv4(dest)
	    header_length = ihl * 4
	    return {
	        'version': version,
	        'ihl': ihl,
	        'tos': tos,
	        'total_length': total_length,
	        'ttl': ttl,
	        'protocol': protocol,
	        'src_ip': src_ip,
	        'dest_ip': dest_ip,
	        'data': data[header_length:]  # rest (payload)
	    }
	
	def parse_tcp_header(data):
	    # Minimum TCP header size is 20 bytes
	    src_port, dest_port, seq, ack, offset_reserved_flags, window, checksum, urg_ptr = struct.unpack('!HHLLHHHH', data[:20])
	    data_offset = (offset_reserved_flags >> 12) * 4
	    return {
	        'src_port': src_port,
|3,0,3,1,50,0,1757958584,"import socket","import struct","import textwrap","","# formatting helpers","def mac_addr(bytes_addr):","    return ':'.join('%02x' % b for b in bytes_addr)","","def ipv4(addr_bytes):","    return '.'.join(str(b) for b in addr_bytes)","","def parse_ethernet_header(packet):","    # Ethernet header is 14 bytes: dest_mac(6) src_mac(6) protocol(2)","    eth_header = packet[:14]",>68
|<"    dest_mac, src_mac, proto = struct.unpack('!6s6sH', eth_header)","    return {","        'dest_mac': mac_addr(dest_mac),","        'src_mac': mac_addr(src_mac),","        'proto': proto,","        'data': packet[14:]","    }","","def parse_ipv4_header(data):","    # Minimum IPv4 header is 20 bytes","    # unpack: version + IHL, DSCP/ECN, total length, identification, flags+fragment offset,","    # TTL, protocol, header checksum, source IP, dest IP",>144
|<"    version_ihl, tos, total_length, identification, flags_frag, ttl, protocol, checksum, src, dest = struct.unpack('!BBHHHBBH4s4s', data[:20])","    version = version_ihl >> 4","    ihl = version_ihl & 0x0F","    src_ip = ipv4(src)","    dest_ip = ipv4(dest)","    header_length = ihl * 4","    return {","        'version': version,","        'ihl': ihl,","        'tos': tos,","        'total_length': total_length,","        'ttl': ttl,","        'protocol': protocol,",>27
|<"        'src_ip': src_ip,","        'dest_ip': dest_ip,","        'data': data[header_length:]  # rest (payload)","    }","","def parse_tcp_header(data):","    # Minimum TCP header size is 20 bytes","    src_port, dest_port, seq, ack, offset_reserved_flags, window, checksum, urg_ptr = struct.unpack('!HHLLHHHH', data[:20])","    data_offset = (offset_reserved_flags >> 12) * 4","    return {","        'src_port': src_port,"
"4	LINE	0
	import pyshark
	
	def live_capture(interface):
	    capture = pyshark.LiveCapture(interface=interface)
	    for pkt in capture.sniff_continuously():
	        try:
	            # Access some layers
	            print(f"Packet: {pkt.ip.src} -> {pkt.ip.dst}, Protocol: {pkt.highest_layer}")
	            if 'TCP' in pkt:
	                print(f"    TCP Ports: {pkt.tcp.srcport} -> {pkt.tcp.dstport}")
	        except AttributeError:
	            # maybe packet doesn't have those fields
	            pass
	
	if __name__ == "__main__":
	    live_capture("eth0")  # replace with your interface
	
|3,0,4,1,17,0,1757958022,"import pyshark","","def live_capture(interface):","    capture = pyshark.LiveCapture(interface=interface)","    for pkt in capture.sniff_continuously():","        try:","            # Access some layers","            print(f\"Packet: {pkt.ip.src} -> {pkt.ip.dst}, Protocol: {pkt.highest_layer}\")","            if 'TCP' in pkt:","                print(f\"    TCP Ports: {pkt.tcp.srcport} -> {pkt.tcp.dstport}\")",>32
|<"        except AttributeError:","            # maybe packet doesn't have those fields","            pass","","if __name__ == \"__main__\":","    live_capture(\"eth0\")  # replace with your interface",""

# File marks:
'0  10  0  ~/packet_sniffer.py
|4,48,10,0,1758005859,"~/packet_sniffer.py"
'1  16  5  ~/packet_sniffer.py
|4,49,16,5,1758004393,"~/packet_sniffer.py"
'2  16  5  ~/packet_sniffer.py
|4,50,16,5,1758004393,"~/packet_sniffer.py"
'3  17  21  ~/packet_sniffer.py
|4,51,17,21,1758004308,"~/packet_sniffer.py"
'4  17  21  ~/packet_sniffer.py
|4,52,17,21,1758004308,"~/packet_sniffer.py"
'5  14  16  ~/packet_sniffer.py
|4,53,14,16,1757999983,"~/packet_sniffer.py"
'6  14  16  ~/packet_sniffer.py
|4,54,14,16,1757999983,"~/packet_sniffer.py"
'7  14  16  ~/packet_sniffer.py
|4,55,14,16,1757999983,"~/packet_sniffer.py"
'8  14  16  ~/packet_sniffer.py
|4,56,14,16,1757999983,"~/packet_sniffer.py"
'9  17  0  ~/packet_sniffer.py
|4,57,17,0,1757999880,"~/packet_sniffer.py"

# Jumplist (newest first):
-'  10  0  ~/packet_sniffer.py
|4,39,10,0,1758005859,"~/packet_sniffer.py"
-'  16  5  ~/packet_sniffer.py
|4,39,16,5,1758005832,"~/packet_sniffer.py"
-'  16  5  ~/packet_sniffer.py
|4,39,16,5,1758004393,"~/packet_sniffer.py"
-'  17  21  ~/packet_sniffer.py
|4,39,17,21,1758004308,"~/packet_sniffer.py"
-'  17  21  ~/packet_sniffer.py
|4,39,17,21,1758004308,"~/packet_sniffer.py"
-'  14  16  ~/packet_sniffer.py
|4,39,14,16,1757999983,"~/packet_sniffer.py"
-'  14  16  ~/packet_sniffer.py
|4,39,14,16,1757999983,"~/packet_sniffer.py"
-'  14  16  ~/packet_sniffer.py
|4,39,14,16,1757999983,"~/packet_sniffer.py"
-'  15  0  ~/packet_sniffer.py
|4,39,15,0,1757999949,"~/packet_sniffer.py"
-'  18  0  ~/packet_sniffer.py
|4,39,18,0,1757999949,"~/packet_sniffer.py"
-'  17  0  ~/packet_sniffer.py
|4,39,17,0,1757999949,"~/packet_sniffer.py"
-'  15  0  ~/packet_sniffer.py
|4,39,15,0,1757999949,"~/packet_sniffer.py"
-'  18  0  ~/packet_sniffer.py
|4,39,18,0,1757999949,"~/packet_sniffer.py"
-'  15  0  ~/packet_sniffer.py
|4,39,15,0,1757999949,"~/packet_sniffer.py"
-'  15  0  ~/packet_sniffer.py
|4,39,15,0,1757999880,"~/packet_sniffer.py"
-'  1  0  ~/packet_sniffer.py
|4,39,1,0,1757999870,"~/packet_sniffer.py"
-'  1  0  ~/packet_sniffer.py
|4,39,1,0,1757999870,"~/packet_sniffer.py"
-'  1  0  ~/packet_sniffer.py
|4,39,1,0,1757999870,"~/packet_sniffer.py"
-'  1  0  ~/packet_sniffer.py
|4,39,1,0,1757999870,"~/packet_sniffer.py"
-'  1  0  ~/packet_sniffer.py
|4,39,1,0,1757999870,"~/packet_sniffer.py"
-'  13  0  ~/packet_sniffer.py
|4,39,13,0,1757999417,"~/packet_sniffer.py"
-'  13  0  ~/packet_sniffer.py
|4,39,13,0,1757999417,"~/packet_sniffer.py"
-'  15  0  ~/packet_sniffer.py
|4,39,15,0,1757999417,"~/packet_sniffer.py"
-'  13  0  ~/packet_sniffer.py
|4,39,13,0,1757999417,"~/packet_sniffer.py"
-'  13  0  ~/packet_sniffer.py
|4,39,13,0,1757999417,"~/packet_sniffer.py"
-'  1  0  ~/packet_sniffer.py
|4,39,1,0,1757999385,"~/packet_sniffer.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757990588,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757990588,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757990588,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757990588,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757990588,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757990588,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757990588,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757990588,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757990588,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757990588,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757990588,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757990588,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757990588,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757990588,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757990588,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757990588,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757990588,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757990588,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757990588,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757990588,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757990588,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757990588,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757990588,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757990588,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757990588,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757990588,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757990588,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757990588,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757990588,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757990588,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757990588,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757990588,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757990588,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757990588,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757990588,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757990588,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757990588,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757990588,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757990588,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757990588,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757990588,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757990588,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757990588,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757990588,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757990588,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757990588,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757990588,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757990588,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757990588,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757990588,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757990588,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757990588,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757990588,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757990588,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757990588,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757990588,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757990588,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757990588,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757990588,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757990588,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757990588,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757990588,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757990588,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757990588,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757988948,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757988948,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757988948,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757988948,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757988948,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757988948,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757988948,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757988948,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757988948,"/opt/test2.py"
-'  71  0  /opt/test2.py
|4,39,71,0,1757988948,"/opt/test2.py"

# History of marks within files (newest to oldest):

> ~/packet_sniffer.py
	*	1758005858	0
	"	10	0
	^	10	0
	.	10	0
	+	1	40
	+	1	31
	+	16	22
	+	10	81
	+	12	0
	+	14	5
	+	15	5
	+	15	93
	+	16	6
	+	17	0
	+	10	0

> /opt/test2.py
	*	1757990585	0
	"	71	0
	^	71	0
	.	70	20
	+	70	20

> /opt/Test.py
	*	1757988859	0
	"	83	0
	^	83	0
	.	82	20
	+	92	35
	+	82	20

> /opt/latest.py
	*	1757988192	0
	"	49	0
	^	49	0
	.	50	23
	+	50	23

> /opt/Packets.py
	*	1757986258	0
	"	24	0
	^	24	0
	.	23	43
	+	1	14
	+	23	43

> /opt/Protocols.py
	*	1757986003	0
	"	23	0
	^	23	0
	.	22	29
	+	45	0
	+	44	29
	+	45	0
	+	22	29

> ~/index.html
	*	1757959653	0
	"	80	6
	^	80	7
	.	81	0
	+	81	0

> ~/dash.py
	*	1757959537	0
	"	93	0
	^	93	0
	.	92	48
	+	92	48

> ~/packet.py
	*	1757958590	0
	"	115	0
	^	115	0
	.	114	19
	+	1	13
	+	1	30
	+	114	19

> ~/PacketCapture/packet_analyzer.py
	*	1757935379	0
	"	2	33
	^	2	34
	.	2	33
	+	2	33
